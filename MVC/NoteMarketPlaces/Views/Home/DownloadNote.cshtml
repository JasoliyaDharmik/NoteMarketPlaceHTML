@using PagedList
@using PagedList.Mvc
@using NoteMarketPlaces.Models
@model NoteMarketPlaces.Models.Download

@{
    ViewBag.Title = "DownloadNotes";
    Layout = "~/Views/Shared/Register.cshtml";
}
@Styles.Render("~/Content/css/bootstrap/bootstrap.min.css")

<!-- Custome CSS -->
@Styles.Render("~/Content/css/style.css")

<!-- Responsive CSS -->
@Styles.Render("~/Content/css/responsive.css")
<section class="setfooter">
    <div class="outerbox">
        <section id="dashboard-second-section" class="mydownload-margin">
            <div class="container">
                <div class="row top-table">
                    <div class="col-12 col-sm-12 col-md-12 col-lg-6">
                        <h3>My Downloads</h3>
                    </div>
                    <div class="col-12 col-sm-12 col-md-12 col-lg-6">
                        <form>
                            <div class="row justify-content-end">
                                <div class="wrapper">
                                    <img src="~/content/images/Dashboard/search.jpg" class="searchimage doup">
                                    <input type="text" name="search" value="@Request.QueryString["search"]" class="form-control search-bar InputEmail1" placeholder="Search">
                                    <input name="sortBy" value="@Request.QueryString["sortBy"]" hidden />
                                    <input type="submit" hidden />
                                </div>
                                <div class="marge-left">
                                    <button type="submit" class="btn text-uppercase text-center" id="mybtn"><b>Search</b></button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="grid-table table-responsive-xl">
                            <table class="table">
                                <thead>
                                    <tr style="cursor:pointer">
                                        <th scope="col" class="align-middle text-center" style="cursor:text">SR NO.</th>
                                        <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("DownloadNote", "Home", new { search = Request.QueryString["search"], sortBy = "title", page = Request.QueryString["page"] }) + "'");">NOTE TITLE</th>
                                        <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("DownloadNote", "Home", new { search = Request.QueryString["search"], sortBy = "category", page = Request.QueryString["page"] }) + "'");">CATEGORY</th>
                                        <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("DownloadNote", "Home", new { search = Request.QueryString["search"], sortBy = "buyer", page = Request.QueryString["page"] }) + "'");">BUYER</th>
                                        <th scope="col" class="align-middle" style="cursor:text">SELL TYPE</th>
                                        <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("DownloadNote", "Home", new { search = Request.QueryString["search"], sortBy = "price", page = Request.QueryString["page"] }) + "'");">PRICE</th>
                                        <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("DownloadNote", "Home", new { search = Request.QueryString["search"], sortBy = "download", page = Request.QueryString["page"] }) + "'");">DOWNLOADED DATE/TIME</th>
                                        <th scope="col" class="align-middle"></th>
                                        <th scope="col" class="align-middle"></th>
                                        <th scope="col" class="align-middle"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.pagedList.Count == 0)
                                    {
                                        <tr><td colspan="10" class="align-middle"> No record found!</td></tr>
                                    }
                                    else
                                    {
                                        int i = -1, a;
                                        if (Request.QueryString["page"] == null || Request.QueryString["page"].AsInt() == 1)
                                        {
                                            a = 1;
                                        }
                                        else
                                        {
                                            a = (Request.QueryString["page"].AsInt() - 1) * 5 + 1;
                                        }
                                        foreach (var notes in Model.pagedList)
                                        {
                                            i++;
                                            <tr>
                                                <td class="align-middle text-center">@(a + i)</td>
                                                <td class="align-middle getpurple">@notes.NoteTitle</td>
                                                <td class="align-middle">@notes.Category</td>
                                                <td class="align-middle">@notes.BuyerEmailID</td>
                                                <td class="align-middle">@notes.SellType</td>
                                                <td class="align-middle">$@notes.Price</td>
                                                <td class="align-middle">@notes.ApprovedDate</td>
                                                <td class="align-middle">
                                                    <img src="~/content/images/Dashboard/eye.png" alt="view" style="cursor:pointer" onclick="@("window.location.href = '"+ @Url.Action("Notedetail","Home",new { noteId = notes.NoteID.ToString() } )+"'")">
                                                </td>
                                                <td class="align-middle">
                                                    <div class="dropdown dopointer">
                                                        <a id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                            <i class="fa fa-ellipsis-v  dowhite"></i>
                                                        </a>
                                                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink">
                                                            <a class="dropdown-item">Download Note</a>
                                                            <a class="dropdown-item" data-toggle="modal" data-target="#exampleModal">Add Reviews/Feedback</a>
                                                            <a class="dropdown-item" data-toggle="modal" data-target="#exampleModal1">Report as Inappropriate</a>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td style="cursor:pointer">
                                                    <a class="dropdown-item" onclick="@("window.location.href='" + @Url.Action("DownloadNote","Home",new { noteId = notes.NoteID, search = Request.QueryString["search"], sortBy = "price", page = Request.QueryString["page"] }) + "'");">Download Notes</a>
                                                    <a class="dropdown-item" data-toggle="modal" data-target="#exampleModal" onclick="review(@notes.NoteID)">Add Reviews/Feedback</a>
                                                    <a class="dropdown-item" data-toggle="modal" data-target="#exampleModal1" onclick="spam(@notes.NoteID,'@notes.NoteTitle')">Report as Inappropriate</a>
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <script>
            function review(id) {
                document.getElementById("ReviewNoteID").setAttribute("value", id);
            }
            function spam(id, title) {
                document.getElementById("SpamNoteID").setAttribute("value", id);
                var x = document.getElementsByClassName("noteTitle");
                x[0].innerHTML = title;
            }
        </script>
        <!-- Modal -->
        <div class="modal fade modal-download" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">

                <div class="row">
                    <div class="col-xl-12">
                        <div class="modal-content">
                            <div class="modal-header">

                                <a class="close" data-dismiss="modal" aria-label="Close">
                                    <img src="~/content/images/Notes Details/close.png">
                                </a>
                            </div>
                            <div class="model-data">

                                <div class="model-head text-left">
                                    <p>Add Review</p>
                                </div>
                                <div class="middel-content text-left">

                                    <form method="post">

                                        <input name="NoteReview.NoteID" id="ReviewNoteID" hidden />

                                        <!-- Ratings -->
                                        <div class="row">
                                            <div class="col-12">
                                                <div class="rate addhover">

                                                    <input type="radio" id="star5" name="NoteReview.Rating" value="5" />
                                                    <label for="star5" title="text">5 stars</label>
                                                    <input type="radio" id="star4" name="NoteReview.Rating" value="4" />
                                                    <label for="star4" title="text">4 stars</label>
                                                    <input type="radio" id="star3" name="NoteReview.Rating" value="3" />
                                                    <label for="star3" title="text">3 stars</label>
                                                    <input type="radio" id="star2" name="NoteReview.Rating" value="2" />
                                                    <label for="star2" title="text">2 stars</label>
                                                    <input type="radio" id="star1" name="NoteReview.Rating" value="1" />
                                                    <label for="star1" title="text">1 star</label>
                                                </div>

                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-12">
                                                <div class="form-group">
                                                    <div class="textarea-input">
                                                        <label class="mylabel" for="InputEmail1">Comments *</label>
                                                        @Html.TextAreaFor(m => m.noteReview.Comments, new { @placeholder = "Comments...", @class = "form-control InputEmail1" })
                                                        @Html.ValidationMessageFor(m => m.noteReview.Comments)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-12">
                                                <button type="submit" class="btn text-uppercase text-center" id="mybtn"><b>submit</b></button>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

            </div>
        </div>


        <!-- Modal2 -->
        <div class="modal fade modal-download" id="exampleModal1" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">

                <div class="row">
                    <div class="col-xl-12">
                        <div class="modal-content">
                            <div class="modal-header">

                                <a class="close" data-dismiss="modal" aria-label="Close">
                                    <img src="~/content/images/Notes Details/close.png">
                                </a>
                            </div>
                            <div class="model-data">

                                <div class="model-head text-left">
                                    <p class="noteTitle">Note Title</p>
                                </div>
                                <div class="middel-content text-left">

                                    <form method="post">

                                        <input name="spamReport.NoteID" id="SpamNoteID" hidden />

                                        <div class="row">
                                            <div class="col-12">
                                                <div class="form-group">
                                                    <div class="textarea-input">
                                                        <label class="mylabel" for="InputEmail1">Remark *</label>
                                                        @Html.TextAreaFor(m => m.spamReport.Remark, new { @placeholder = "Remark...", @class = "form-control InputEmail1" })
                                                        @Html.ValidationMessageFor(m => m.spamReport.Remark)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-12">
                                                <button type="submit" class="btn text-uppercase text-center" id="mybtn"><b>submit</b></button>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <!-- Pagination -->
    @Html.PagedListPager(Model.pagedList, page => Url.Action("DownloadNote", new { page, search = Request.QueryString["search"], sortBy = Request.QueryString["sortBy"] }), new PagedListRenderOptions()
   {
  Display = PagedListDisplayMode.IfNeeded,
  ContainerDivClasses = null,
  LiElementClasses = new string[] { "page-item" },
  UlElementClasses = new string[] { "pagination justify-content-center" },
  LinkToNextPageFormat = "<i class='fa fa-chevron-right'></i>",
  LinkToPreviousPageFormat = "<i class='fa fa-chevron-left'></i>",
  MaximumPageNumbersToDisplay = 5,
  DisplayEllipsesWhenNotShowingAllPageNumbers = false,
  DisplayLinkToFirstPage = PagedListDisplayMode.Never,
  DisplayLinkToLastPage = PagedListDisplayMode.Never
})
</section>
